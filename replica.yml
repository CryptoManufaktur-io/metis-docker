version: "3.4"
x-logging: &logging
  logging:
    driver: json-file
    options:
      max-size: 100m
      max-file: "3"

services:
  dtl:
    image: metisdao/mvm-andromeda:dtl
    entrypoint: ./dtl.sh
    restart: ${RESTART}
    stop_grace_period: 30s
    environment:
      URL: https://metis-us-east-2-mainnet-json.s3.us-east-2.amazonaws.com/addresses.json
      DATA_TRANSPORT_LAYER__L1_RPC_ENDPOINT: ${DATA_TRANSPORT_LAYER__L1_RPC_ENDPOINT}
      DATA_TRANSPORT_LAYER__L2_RPC_ENDPOINT: "https://andromeda.metis.io/?owner=1088"
      DATA_TRANSPORT_LAYER__SYNC_FROM_L1: "false"
      DATA_TRANSPORT_LAYER__SYNC_FROM_L2: "true"
      DATA_TRANSPORT_LAYER__L2_CHAIN_ID: "1088"
      DATA_TRANSPORT_LAYER__DB_PATH: /data/db
      DATA_TRANSPORT_LAYER__SERVER_PORT: "7878"
      DATA_TRANSPORT_LAYER__TRANSACTIONS_PER_POLLING_INTERVAL: "1000"
      DATA_TRANSPORT_LAYER__CONFIRMATIONS: "0"
      DATA_TRANSPORT_LAYER__POLLING_INTERVAL: "100"
      DATA_TRANSPORT_LAYER__LOGS_PER_POLLING_INTERVAL: "2000"
      DATA_TRANSPORT_LAYER__DANGEROUSLY_CATCH_ALL_ERRORS: "true"
      DATA_TRANSPORT_LAYER__SERVER_HOSTNAME: "0.0.0.0"
    expose:
      - 7878
    volumes:
      - dtl-data:/data
    <<: *logging

  l2geth:
    image: metisdao/mvm-andromeda:l2geth-replica
    entrypoint: sh ./geth.sh
    restart: ${RESTART}
    stop_grace_period: 2m
    env_file:
      - ./geth.env
    environment:
      ROLLUP_BACKEND: "l2"
      URL: https://metis-us-east-2-mainnet-json.s3.us-east-2.amazonaws.com/addresses.json
      L2GETH_GENESIS_URL: https://metis-us-east-2-mainnet-json.s3.us-east-2.amazonaws.com/state-dump.latest.json
      ROLLUP_CLIENT_HTTP: http://dtl:7878
      L2_URL: https://andromeda.metis.io/?owner=1088
      ETH1_CTC_DEPLOYMENT_HEIGHT: 13626959
      EMERGENCY_FORK020222_NUMBER: 750000
    volumes:
      - l2geth-data:/root/.ethereum
      - $PWD/geth.sh:/geth.sh
    <<: *logging

  replica-healthcheck:
    image: ethereumoptimism/replica-healthcheck:${HC_IMAGE_TAG:-latest}
    restart: ${RESTART}
    environment:
      HEALTHCHECK__REFERENCE_RPC_PROVIDER: ${HEALTHCHECK__REFERENCE_RPC_PROVIDER}
      HEALTHCHECK__TARGET_RPC_PROVIDER: ${HEALTHCHECK__TARGET_RPC_PROVIDER}
      REPLICA_HEALTHCHECK__ETH_NETWORK: ${REPLICA_HEALTHCHECK__ETH_NETWORK}
    <<: *logging

volumes:
  dtl-data:
  l2geth-data:
